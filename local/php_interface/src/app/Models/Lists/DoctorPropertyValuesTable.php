<?php
namespace Otus\Custom;

use Bitrix\Main\Localization\Loc;
use Bitrix\Main\ORM\Data\DataManager;
use Bitrix\Main\ORM\Fields\FloatField;
use Bitrix\Main\ORM\Fields\IntegerField;
use Bitrix\Main\ORM\Fields\TextField;
use Models\AbstractIblockPropertyValuesTable;
use Bitrix\Main\Entity\ReferenceField;
// use Otus\Custom\PocedurePropertyValuesTable;

/**
 * Class ElementPropS16Table
 * 
 * Fields:
 * <ul>
 * <li> IBLOCK_ELEMENT_ID int mandatory
 * <li> PROPERTY_64 text optional
 * <li> PROPERTY_65 text optional
 * <li> PROPERTY_66 text optional
 * <li> PROPERTY_67 double optional
 * <li> PROPERTY_68 text optional
 * <li> PROPERTY_70 text optional
 * </ul>
 *
 * @package Bitrix\Iblock
 **/


class DoctorPropertyValuesTable extends AbstractIblockPropertyValuesTable
{

	public const IBLOCK_ID = 16;

    // public static function getMap(): array
    // {
    //     $map = [
    //         'CITY' => new ReferenceField(
    //             'CITY', 
    //             PocedurePropertyValuesTable::class, 
    //             ['=this.CITY_ID' => 'ref.IBLOCK_ELEMENT_ID']
    //         )
    //     ];

    //     return parent::getMap() + $map; // TODO: Change the autogenerated stub

    // }



    // const IBLOCK_ID = 16;
	// /**
	//  * Returns DB table name for entity.
	//  *
	//  * @return string
	//  */
	// public static function getTableName()
	// {
	// 	return 'b_iblock_element_prop_s16';
	// }

	// /**
	//  * Returns entity map definition.
	//  *
	//  * @return array
	//  */
	// public static function getMap()
	// {
	// 	$map =  [
	// 		'IBLOCK_ELEMENT_ID' => (new IntegerField('IBLOCK_ELEMENT_ID',
	// 				[]
	// 			))->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_IBLOCK_ELEMENT_ID_FIELD'))
	// 					->configurePrimary(true)
	// 		,			
	// 		'SURNAME' => (new TextField('SURNAME'))
	// 				->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_PROPERTY_64_FIELD'))
	// 				->configureColumnName('PROPERTY_64'),

	// 		'DOCNAME' => (new TextField('DOCNAME'))
	// 				->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_PROPERTY_65_FIELD'))
	// 				->configureColumnName('PROPERTY_65'),
	// 		'PATRONYMIC' => (new TextField('PATRONYMIC'))
	// 				->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_PROPERTY_66_FIELD'))
	// 				->configureColumnName('PROPERTY_66'),
	// 		'FIO' => (new TextField('FIO'))
	// 				->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_PROPERTY_68_FIELD'))
	// 				->configureColumnName('PROPERTY_68'),	
	// 		'EXPERIENCE' => (new TextField('EXPERIENCE'))
	// 				->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_PROPERTY_67_FIELD'))
	// 				->configureColumnName('PROPERTY_67'),
	// 		'PROCEDURES_MUL' => (new TextField('PROCEDURES_MUL'))
	// 				->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_PROPERTY_70_FIELD'))
	// 				->configureColumnName('PROPERTY_70'),			
		
	// 		'PROCEDURE' => new ReferenceField(
    //             'PROCEDURE', 
    //             PocedurePropertyValuesTable::class, 
    //             ['=this.PROCEDURES_MUL' => 'ref.IBLOCK_ELEMENT_ID']
    //         )		
			
	// 	];

	// 	 return parent::getMap() + $map;
	// }
	
	//  public static function getMap(): array
    // {
    //     $map = [
	// 		'IBLOCK_ELEMENT_ID' => (new IntegerField('IBLOCK_ELEMENT_ID',
	// 				[]
	// 			))->configureTitle(Loc::getMessage('ELEMENT_PROP_S16_ENTITY_IBLOCK_ELEMENT_ID_FIELD'))
	// 					->configurePrimary(true),
    //         'PROCEDURE' => new ReferenceField(
    //             'PROCEDURE', 
    //             PocedurePropertyVuluesTable::class, 
    //             ['=this.PROCEDURES_MUL' => 'ref.IBLOCK_ELEMENT_ID']
    //         )
    //     ];

    //     return parent::getMap() + $map; // TODO: Change the autogenerated stub

    // }
}